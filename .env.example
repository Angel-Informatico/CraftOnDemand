# CraftOnDemand Environment Variables Example
#
# Instructions:
# 1. Create a copy of this file named '.env' in the same directory.
#    - Linux/macOS: cp .env.example .env
#    - Windows (CMD): copy .env.example .env
#    - Windows (PowerShell): Copy-Item .env.example .env
# 2. Edit the '.env' file with your specific configuration values.
# 3. IMPORTANT: The '.env' file contains sensitive information (like API keys).
#    Ensure it is listed in your '.gitignore' file and NEVER commit it to version control.
#    The provided .gitignore should already include '*.env'.

# --- Proxy Listener Configuration ---
# This is the port on which CraftOnDemand will listen for Minecraft client pings (server list refreshes)
# and initial join attempts. Players should add your server to their Minecraft client using the
# IP/hostname of the machine running CraftOnDemand, along with this port.
# The default Minecraft port is 25565. If you use this, players won't need to specify a port in Minecraft.
LISTEN_PORT=25565

# --- Pterodactyl Panel API Details ---

# Full URL of your Pterodactyl panel.
# Example: https://panel.yourhostingprovider.com or https://pterodactyl.yourdomain.com
# CRITICAL: Do NOT include a trailing slash (e.g., use https://panel.example.com, NOT https://panel.example.com/).
PTERO_HOST=https://panel.example.com

# Pterodactyl Client API Key.
# This key is used to securely communicate with your Pterodactyl panel.
# How to generate:
#   1. Log in to your Pterodactyl panel.
#   2. Go to "Account Settings" (usually top right avatar -> Account Settings).
#   3. Navigate to the "API Credentials" or "Application API" section.
#   4. Create a new API key. Give it a descriptive name (e.g., "CraftOnDemand").
# Required Permissions for the API Key:
#   - Server Resources: Read (`GET /api/client/servers/{server_id}/resources`) - To check server status.
#   - Power Control: Create/Update (`POST /api/client/servers/{server_id}/power`) - To send start signals.
# Ensure the "Allowed IPs" field for the API key is left blank or configured to allow requests
# from the IP address where CraftOnDemand will be running.
PTERO_API_KEY=YOUR_PTERODACTYL_CLIENT_API_KEY_HERE

# Full UUID (Universally Unique Identifier) of your Minecraft server on the Pterodactyl panel.
# This is NOT the short 8-character ID (e.g., `a1b2c3d4`).
# You can find the full UUID in the URL when you are on your server's page in the Pterodactyl panel.
# It looks like: `https://panel.example.com/server/12345678-90ab-cdef-1234-567890abcdef`
# The UUID is the long string of characters at the end.
PTERO_SERVER_ID=YOUR_FULL_PTERODACTYL_SERVER_UUID_HERE

# --- Actual Minecraft Game Server Details ---
# These settings tell CraftOnDemand how to interact with your *actual* Minecraft game server
# once Pterodactyl reports it as running.

# Hostname or IP address of your actual Minecraft game server.
# This is the address that CraftOnDemand will:
#  a) Ping to get live status (player count, MOTD) when Pterodactyl says the server is 'running'.
#  b) Tell players to connect to directly once the server is confirmed to be online.
#
# Common Scenarios:
#  - If CraftOnDemand is running on the VERY SAME machine/virtual server as your Pterodactyl daemon (Wings)
#    AND your Minecraft server instance, you *might* be able to use '127.0.0.1' (localhost).
#  - If CraftOnDemand is on a different machine or in a Docker container that can reach your game server
#    via a private network IP, use that private IP.
#  - Otherwise, this will typically be the public IP address or hostname that players would normally use
#    to connect to your game server if CraftOnDemand wasn't in place.
# Ensure this address is reachable from where CraftOnDemand is running.
MINECRAFT_SERVER_HOST=your.actual.minecraft.server.ip.or.hostname

# Port of your actual Minecraft game server.
# This is the port number configured in your Minecraft server's `server.properties` file
# and is the primary port allocated to your server in Pterodactyl.
# Example: 25566 (Note: This is often different from LISTEN_PORT if you want to hide the real port initially).
MINECRAFT_SERVER_PORT=25566

# --- Minecraft Server Online Mode Configuration ---
# This setting informs CraftOnDemand about the authentication mode of your backend Minecraft server.
# The CraftOnDemand proxy itself always operates in an 'offline-mode' manner to intercept initial connections
# before authentication with Mojang would occur.
#
# This variable is primarily for informational purposes within the script at present. It could be used for
# more advanced proxying features in the future (e.g., if the proxy were to handle full player session
# forwarding and needed to know how to authenticate with the backend).
#
# - Set to 'true' if your Minecraft server's `server.properties` has `online-mode=true`.
#   This means the server verifies players with Mojang (standard for premium servers).
# - Set to 'false' if your Minecraft server's `server.properties` has `online-mode=false`.
#   This means the server does not verify players with Mojang (often called "cracked" or "offline-mode" servers).
MINECRAFT_SERVER_ONLINE_MODE=true